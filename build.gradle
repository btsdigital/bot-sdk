plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "maven-publish"
    id "io.gitlab.arturbosch.detekt" version "1.0.1"
    id 'signing'
}

group = "kz.btsd.bot"
ext.moduleName = 'kz.btsd.bot.botsdk'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileKotlin.destinationDir = compileJava.destinationDir

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin') {
            details.useVersion kotlinVersion
        }
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation("io.github.microutils:kotlin-logging:$kotlinLoggingVersion")

    compile("kz.btsd:bot-api-contract:$botApiContractVersion")

    implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
    implementation("com.squareup.okhttp3:logging-interceptor:$okHttpVersion")
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
    implementation("com.squareup.retrofit2:converter-jackson:$retrofitVersion")

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion")

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"
    testCompile "io.mockk:mockk:$mockkVersion"
    testCompile "org.slf4j:slf4j-simple:$sl4jSimpleVersion"
}

repositories {
    mavenCentral()
}

sourceSets {
    systemTest {
        compileClasspath += sourceSets.main.output + configurations.testCompile + configurations.runtimeClasspath
        runtimeClasspath += output + compileClasspath + configurations.testRuntime
    }
}

task systemTest(type: Test) {
    if (System.getenv('url') == null) {
        environment "url", "https://messapi.btsdapps.net:443/bot/v1/"
    }
    if (System.getenv('token') == null) {
        environment "token", "place_token_here"
    }
    useJUnitPlatform()
    description = 'Runs the system tests.'
    group = 'verification'
    testClassesDirs = sourceSets.systemTest.output.classesDirs
    classpath = sourceSets.systemTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            version = version
            from components.java
        }
    }
}

def repo = "github.com/btsdigital/bot-sdk"

if (project.hasProperty("jiraUsername") && project.hasProperty("jiraPass")) {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'kz.btsd'
                artifactId 'bot-sdk'
                version version
                from components.java
                artifact sourceJar

                pom {

                    description = 'bot sdk for AITU messenger bots'
                    name = 'AITU bots Bot sdk'
                    url = repo
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = "https://$repo/blob/master/LICENSE"
                            distribution = 'repo'
                        }
                    }
                    scm {
                        url = "https://$repo"
                        connection = "scm:git:git://$repo\\.git"
                    }
                    developers {
                        developer {
                            name = 'btsd bot platform'
                            organization = "BTSD"
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username jiraUsername
                    password jiraPass
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}
